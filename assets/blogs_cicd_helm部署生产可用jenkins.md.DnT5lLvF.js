import{_ as s,c as n,o as a,a2 as e}from"./chunks/framework.DukRYrIy.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/cicd/helm部署生产可用jenkins.md","filePath":"blogs/cicd/helm部署生产可用jenkins.md","lastUpdated":1712134702000}'),p={name:"blogs/cicd/helm部署生产可用jenkins.md"},i=e(`<p>helm部署生产可用jenkins</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ol><li><p>k8s环境</p></li><li><p>helm3</p></li><li><p>提前创建jenkins namespace</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> kubectl create ns jenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>检查默认的StorageClass</p><p>Jenkins Chart 会在部署过程中使用默认的StorageClass 创建8G的pvc作为 JENKINS_HOME 的挂载卷</p><p>所以确保k8s中存在唯一的default的StorageClass</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>NAME                          PROVISIONER                                       RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span></span>
<span class="line"><span>nfs-client-retain (default)   cluster.local/nfs-client-nfs-client-provisioner   Retain          Immediate           true                   103d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>添加helm仓库</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># helm repo add jenkins https://charts.jenkins.io</span></span>
<span class="line"><span># helm repo update</span></span>
<span class="line"><span># helm search repo jenkins</span></span>
<span class="line"><span>NAME            CHART VERSION   APP VERSION     DESCRIPTION</span></span>
<span class="line"><span>jenkins/jenkins 5.1.4           2.440.2         Jenkins - Build great things at any scale! As t...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>下载chart包，非必须，主要是我想看看默认的values</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>helm pull jenkins/jenkins</span></span>
<span class="line"><span>tar -zxvf jenkins-5.1.4.tgz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>先不修改value，部署看看</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>helm install jenkins jenkins/jenkins -n jenkins</span></span>
<span class="line"><span></span></span>
<span class="line"><span>NAME: jenkins</span></span>
<span class="line"><span>LAST DEPLOYED: Tue Apr  2 11:32:13 2024</span></span>
<span class="line"><span>NAMESPACE: jenkins</span></span>
<span class="line"><span>STATUS: deployed</span></span>
<span class="line"><span>REVISION: 1</span></span>
<span class="line"><span>NOTES:</span></span>
<span class="line"><span>1. Get your &#39;admin&#39; user password by running:</span></span>
<span class="line"><span>  kubectl exec --namespace jenkins -it svc/jenkins -c jenkins -- /bin/cat /run/secrets/additional/chart-admin-password &amp;&amp; echo</span></span>
<span class="line"><span>2. Get the Jenkins URL to visit by running these commands in the same shell:</span></span>
<span class="line"><span>  echo http://127.0.0.1:8080</span></span>
<span class="line"><span>  kubectl --namespace jenkins port-forward svc/jenkins 8080:8080</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. Login with the password from step 1 and the username: admin</span></span>
<span class="line"><span>4. Configure security realm and authorization strategy</span></span>
<span class="line"><span>5. Use Jenkins Configuration as Code by specifying configScripts in your values.yaml file, see documentation: http://127.0.0.1:8080/configuration-as-code and examples: https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos</span></span>
<span class="line"><span></span></span>
<span class="line"><span>For more information on running Jenkins on Kubernetes, visit:</span></span>
<span class="line"><span>https://cloud.google.com/solutions/jenkins-on-container-engine</span></span>
<span class="line"><span></span></span>
<span class="line"><span>For more information about Jenkins Configuration as Code, visit:</span></span>
<span class="line"><span>https://jenkins.io/projects/jcasc/</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>NOTE: Consider using a custom image with pre-installed plugins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">​</a></h2><ol><li><p>jenkins镜像拉取失败</p><blockquote><p>mediaType in manifest should be &#39;application/vnd.docker.distribution.manifest.v2+json&#39; not &#39;application/vnd.oci.image.manifest.v1+json&#39;</p></blockquote></li></ol><p>原因是我的k8s集群太旧了，1.18版本，docker 19.03.0版本。</p><p>这是因为Docker和OCI在容器镜像格式上有所不同。Docker使用的是manifest v2格式，而OCI使用的是manifest v1格式。虽然两种格式都可以使用JSON表示，但在mediaType上有所不同。因此，在使用Docker Registry时，必须使用’application/vnd.docker.distribution.manifest.v2+json’作为mediaType。</p><p>解决</p><p>经测试升级docker版本可以解决此问题，本次是小版本升级从<code>19.03.4</code>升级到<code>19.03.13</code>，命令如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 首先通过rpm -qa| docker 查看已经安装的docker版本，然后卸载掉老的，再安装新的，再启动服务，测试即可yum -y remove docker-ce-19.03.4-3.el7.x86_64yum -y remove docker-ce-cli-19.03.4-3.el7.x86_64yum -y install docker-ce-19.03.13-3.el7.x86_64systemctl start docker &amp;&amp; systemctl enable dockerdocker run --rm kong/kong-gateway:3.3.0.0 kong version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意</p><p>卸载后重装的<strong>docker</strong>，<code>/usr/lib/systemd/system/docker.service</code>文件会被重置，最好通过<code>/etc/docker/daemon.json</code>来控制定置化的配置。</p>`,17),l=[i];function r(c,t,o,d,u,m){return a(),n("div",null,l)}const k=s(p,[["render",r]]);export{h as __pageData,k as default};
