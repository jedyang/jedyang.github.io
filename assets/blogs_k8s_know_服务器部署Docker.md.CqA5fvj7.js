import{_ as e,c as a,o as s,a2 as n}from"./chunks/framework.DukRYrIy.js";const r="/assets/image-20210222202602350.BfuGR-Vd.png",m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/k8s/know/服务器部署Docker.md","filePath":"blogs/k8s/know/服务器部署Docker.md","lastUpdated":1712134702000}'),i={name:"blogs/k8s/know/服务器部署Docker.md"},l=n(`<h2 id="服务器部署docker" tabindex="-1">服务器部署Docker <a class="header-anchor" href="#服务器部署docker" aria-label="Permalink to &quot;服务器部署Docker&quot;">​</a></h2><p>根据自己的linux系统选择对应的官方文档。</p><p>我的是centos，下面将centos的步骤</p><h4 id="可能会有老版本的docker干扰-先移除干净" tabindex="-1">可能会有老版本的docker干扰，先移除干净 <a class="header-anchor" href="#可能会有老版本的docker干扰-先移除干净" aria-label="Permalink to &quot;可能会有老版本的docker干扰，先移除干净&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ sudo yum remove docker \\                  docker-client \\                  docker-client-latest \\                  docker-common \\                  docker-latest \\                  docker-latest-logrotate \\                  docker-logrotate \\                  docker-engine</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者直接</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ sudo yum remove docker*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="指定阿里云镜像源" tabindex="-1">指定阿里云镜像源 <a class="header-anchor" href="#指定阿里云镜像源" aria-label="Permalink to &quot;指定阿里云镜像源&quot;">​</a></h4><p>sudo yum-config-manager --add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo" target="_blank" rel="noreferrer">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></p><h4 id="安装最新版本docker" tabindex="-1">安装最新版本docker <a class="header-anchor" href="#安装最新版本docker" aria-label="Permalink to &quot;安装最新版本docker&quot;">​</a></h4><p>sudo yum install docker-ce docker-ce-cli containerd.io</p><h5 id="安装指定版本的docker" tabindex="-1">安装指定版本的docker <a class="header-anchor" href="#安装指定版本的docker" aria-label="Permalink to &quot;安装指定版本的docker&quot;">​</a></h5><h5 id="查看所有版本" tabindex="-1">查看所有版本 <a class="header-anchor" href="#查看所有版本" aria-label="Permalink to &quot;查看所有版本&quot;">​</a></h5><p>yum list docker-ce --showduplicates | sort -r</p><h5 id="安装指定版本" tabindex="-1">安装指定版本 <a class="header-anchor" href="#安装指定版本" aria-label="Permalink to &quot;安装指定版本&quot;">​</a></h5><p>sudo yum install docker-ce-18.09.1 docker-ce-cli-18.09.1 containerd.io</p><h4 id="启动docker" tabindex="-1">启动docker <a class="header-anchor" href="#启动docker" aria-label="Permalink to &quot;启动docker&quot;">​</a></h4><p>sudo systemctl start docker</p><h4 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h4><p>sudo docker run hello-world</p><p>会从docker的镜像仓库拉取镜像并运行。</p><p><strong>建立 docker 用户组</strong></p><p>默认情况下，docker 命令会使用 <a href="https://en.wikipedia.org/wiki/Unix_domain_socket" target="_blank" rel="noreferrer">Unix socket</a> 与 Docker 引擎通讯。而只有 root 用户和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。因此，更好地做法是将需要使用 docker 的用户加入 docker 用户组。</p><p>建立 docker 组：</p><p>$ sudo groupadd docker</p><p>将当前用户加入 docker 组：</p><p>$ sudo usermod -aG docker $USER</p><p>退出重新登录，即可使用</p><p>docker run hello-world</p><p>测试一下</p><h3 id="报错解决" tabindex="-1">报错解决 <a class="header-anchor" href="#报错解决" aria-label="Permalink to &quot;报错解决&quot;">​</a></h3><ol><li>需要安装selinux</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>错误：软件包：3:docker-ce-18.09.1-3.el7.x86_64 (docker-ce-stable)</span></span>
<span class="line"><span>          需要：container-selinux &gt;= 2.9</span></span>
<span class="line"><span>错误：软件包：containerd.io-1.6.24-3.1.el7.x86_64 (docker-ce-stable)</span></span>
<span class="line"><span>          需要：container-selinux &gt;= 2:2.74</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>需要安装epel源 才能yum安装container-selinux</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>yum install epel-release   #阿里云上的epel源</span></span>
<span class="line"><span></span></span>
<span class="line"><span>yum install container-selinux</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="报错" tabindex="-1">报错 <a class="header-anchor" href="#报错" aria-label="Permalink to &quot;报错&quot;">​</a></h4><blockquote><p>docker: Error response from daemon: Get <a href="https://registry-1.docker.io/v2/library/hello-world/manifests/latest:" target="_blank" rel="noreferrer">https://registry-1.docker.io/v2/library/hello-world/manifests/latest:</a> Get <a href="https://auth.docker.io/token?scope=repository%3Alibrary%2Fhello-world%3Apull&amp;service=registry.docker.io:" target="_blank" rel="noreferrer">https://auth.docker.io/token?scope=repository%3Alibrary%2Fhello-world%3Apull&amp;service=registry.docker.io:</a> net/http: TLS handshake timeout.</p></blockquote><h4 id="解决" tabindex="-1">解决： <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决：&quot;">​</a></h4><p>配置阿里云的镜像源</p><p>CentOS 7系统的配置步骤：</p><p>1、打开daemon.json文件：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">daemon.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2、在里面输入阿里云镜像配置：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;registry-mirrors&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://6kx4zyno.mirror.aliyuncs.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>3、重启docker服务：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo systemctl restart docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2021.2.22日更新</p><p>今天在腾讯云的一台云主机上安装了最新版docker 3:20.10.3-3.el7版本</p><p>又报上面的错误，当时上面的方法没有解决问题。</p><p>在网上找到一下解决方法，测试可用：</p><h4 id="报错-1" tabindex="-1">报错： <a class="header-anchor" href="#报错-1" aria-label="Permalink to &quot;报错：&quot;">​</a></h4><p>[root@VM-0-3-centos ~]# docker run hello-world Unable to find image &#39;hello-world:latest&#39; locally docker: Error response from daemon: Head <a href="https://registry-1.docker.io/v2/library/hello-world/manifests/latest:" target="_blank" rel="noreferrer">https://registry-1.docker.io/v2/library/hello-world/manifests/latest:</a> Get <a href="https://auth.docker.io/token?scope=repository%3Alibrary%2Fhello-world%3Apull&amp;service=registry.docker.io:" target="_blank" rel="noreferrer">https://auth.docker.io/token?scope=repository%3Alibrary%2Fhello-world%3Apull&amp;service=registry.docker.io:</a> net/http: TLS handshake timeout.</p><h4 id="解决-1" tabindex="-1">解决： <a class="header-anchor" href="#解决-1" aria-label="Permalink to &quot;解决：&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@docker-registry ~]# yum install bind-utils                          // 安装dig工具</span></span>
<span class="line"><span>[root@docker-registry ~]# dig @114.114.114.114 registry-1.docker.io</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+r+`" alt="image-20210222202602350"></p><p>bai114.114.114.114是国内移动、电信和du联通通用的DNS，解析zhi成功率相对dao说更高，国内用户使用的比较多，速度相对快、稳定，是国内用户上网常用的DNS。8.8.8.8是GOOGLE公司提供的DNS，该地址是全球通用的，相对zhuan说，更适合国外以及访问国外网站的用户使用。</p><p><strong>选择上面命令执行结果中的一组解析放到本机的/etc/hosts文件里做映射</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@docker-registry ~]# vim /etc/hosts</span></span>
<span class="line"><span>52.5.11.128    registry-1.docker.io</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>再次run就好了</p><p>之后pull mysql发现很慢，把解决1的阿里云镜像配置步骤加上，重试就好了，非常快。</p><h4 id="安装containerd之后再安装docker-报错" tabindex="-1">安装containerd之后再安装docker，报错 <a class="header-anchor" href="#安装containerd之后再安装docker-报错" aria-label="Permalink to &quot;安装containerd之后再安装docker，报错&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>查看journalctl -xe</span></span>
<span class="line"><span>Failed to listen on sockets: Address already in use</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>解决：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/var/run/ 下查看发现docker.sock变成了一个目录</span></span>
<span class="line"><span>rm -rf /var/run/docker.sock</span></span>
<span class="line"><span>再次启动docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,66),o=[l];function t(p,d,c,h,u,k){return s(),a("div",null,o)}const g=e(i,[["render",t]]);export{m as __pageData,g as default};
