import{_ as s,c as e,o as n,a2 as a}from"./chunks/framework.DukRYrIy.js";const i="/assets/image-20240409112820868.BzjUoQAU.png",p="/assets/image-20240409100043936.AZkpu3qJ.png",t="/assets/image-20240409095844994.BYUaGejW.png",c="/assets/image-20240409100702998.TanLP9jw.png",r="/assets/image-20240409155823112.ZeafkvxI.png",l="/assets/image-20240409160159653.3_Bm7ZBq.png",o="/assets/image-20240409160222178.DOFjAtvr.png",d="/assets/image-20240410154011479.RF9kpsJj.png",m="/assets/image-20240410153212797.74qrQNFB.png",g="/assets/image-20240410152816894.gme2PJA7.png",u="/assets/image-20240410170509308.CRhWgUtU.png",b="/assets/image-20240410170554568.gQBxqSrf.png",k="/assets/image-20240410171345400.C52QIBdE.png",J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/cicd/Docker部署Jenkins.md","filePath":"blogs/cicd/Docker部署Jenkins.md","lastUpdated":1713348792000}'),h={name:"blogs/cicd/Docker部署Jenkins.md"},v=a(`<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mediaType in manifest should be &#39;application/vnd.docker.distribution.manifest.v2+json&#39; not &#39;application/vnd.oci.image.manifest.v1+json&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这是因为最新的jenkins镜像支持的oci标准的镜像格式标准，即application/vnd.oci.image.manifest.v1+json</p><p>而Docker1.20以下的版本还不支持这个oci标准，支持的是application/vnd.docker.distribution.manifest.v2+json</p><p>所以，需要使用1.20以上的docker环境。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir -p /var/jenkins_home</span></span>
<span class="line"><span>chmod 777 /var/jenkins_home</span></span>
<span class="line"><span>docker pull jenkins/jenkins:2.440.2</span></span>
<span class="line"><span>docker run -d -p 8099:8080 -p 50099:50000 -v /var/jenkins_home:/var/jenkins_home --name myjenkins jenkins/jenkins:2.440.2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+i+'" alt="image-20240409112820868"></p><p>查看自动生成的admin密码</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker logs myjenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+p+'" alt="image-20240409100043936"></p><p>可以看到自动生成的密码。</p><p>应该会遇到很多插件，安装失败的情况。</p><p><img src="'+t+'" alt="image-20240409095844994"></p><p>没关系，先进去jenkins，然后配置镜像加速地址就可以安装了。</p><p>继续创建新用户。</p><p>插件管理切换成国内的镜像源</p><p><img src="'+c+'" alt="image-20240409100702998"></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+`" alt="image-20240409155823112"></p><p>配置k8s</p><p>先给jenkins创建一个serviceAccount</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>kubectl create ns jenkins</span></span>
<span class="line"><span>kubectl -n jenkins create serviceaccount jenkins-admin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这里方便起见绑定cluster-admin。正常你应该根据自己的需要创建合适的clusterrole</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>kubectl create clusterrolebinding jenkins --clusterrole=cluster-admin --serviceaccount=jenkins:jenkins-admin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再获取所需的token</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 得到secret名</span></span>
<span class="line"><span>kubectl -n jenkins get serviceaccount jenkins-admin -o=jsonpath=&#39;{.secrets[0].name}&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>kubectl -n jenkins get secret jenkins-admin-token-wjvbv -o=jsonpath=&#39;{.data.token}&#39; | base64 -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>得到token，再对其进行base64解密</p><p>结果下面填到jenkins里</p><p><img src="`+l+'" alt="image-20240409160159653"></p><p><img src="'+o+'" alt="image-20240409160222178"></p><p><img src="'+d+'" alt="image-20240410154011479"></p><p>这里的kubernetes命名空间就是用来运行pod slave的namespace</p><p>这里我创建的是jenkins</p><p><img src="'+m+'" alt="image-20240410153212797"></p><p>测试，连接成功</p><p><img src="'+g+'" alt="image-20240410152816894"></p><p>配置一些信息</p><p><img src="'+u+'" alt="image-20240410170509308"></p><h3 id="配置pod模板" tabindex="-1">配置pod模板 <a class="header-anchor" href="#配置pod模板" aria-label="Permalink to &quot;配置pod模板&quot;">​</a></h3><p><img src="'+b+'" alt="image-20240410170554568"></p><p>一个长长的配置</p><p><img src="'+k+'" alt="image-20240410171345400"></p>',41),_=[v];function j(C,y,f,w,B,A){return n(),e("div",null,_)}const T=s(h,[["render",j]]);export{J as __pageData,T as default};
